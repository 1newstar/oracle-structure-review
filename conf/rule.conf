# 规则等级: 重要规则-10分   一般规则-5分    不重要-3分

[rule01]
name        = big_table
summary		= 超过指定规模且没有分区的表
description = 表的规模过大，将影响表的访问效率、增加维护成本等。常见的解决方案就是使用分区表，将大表转换为分区表。
parm1       = 2
pdesc1		= 表大小(GB)
weight	    = 1
max_value   = 10
status      = ON
title1      = 表名称
title2      = 表大小

[rule02]
name		= table_col_num
summary		= 大于阀值数量字段的表
description = 字段过多，会导致记录长度过大。单个数据存储单元将保存的记录数过少，影响访问效率。
parm1		= 30
pdesc1		= 字段数
weight      = 0.5
max_value   = 10
status      = ON
title1      = 表名称
title2      = 字段数

[rule03]
name		= table_lob
summary		= 包含有大字段类型的表
description = 大对象字段是关系型数据库中应尽量避免的。如有需要，可考虑在外部进行存储。
weight      = 0.3
max_value   = 3
status      = ON
title1      = 表名称
title2      = 字段名

[rule04]
name		= table_mis_pk
summary		= 没有主键的表
description = 主键是关系型数据库中唯一确定一条记录的依据，没有任何理由不定义主键。
weight      = 1
max_value   = 10
status      = ON
title1      = 表名称

[rule05]
name		= table_fk_noind
summary		= 外键没有索引的表
description = 外键没有索引会导致主子表关联查询时，关联效率很低。
weight      = 1
max_value   = 10
status      = ON
title1      = 表名称
title2      = 字段名

[rule06]
name		= count_record_tab
summary		= 单表或单分区记录数量过大
description = 控制单个表或单个分区的数据规模，提高单一对象的访问效率。如记录数过多，应考虑分库、分表、分区等策略。
parm1		= 10000000
pdesc1		= 记录数
weight      = 0.5
max_value   = 3
status      = ON
title1      = 表名称
title2      = 数据量

[rule07]
name		= count_sumpart_single_tab
summary		= 分区数量过多
description = 分区表中分区数量过多，将导致整体维护成本过高，可调整分区粒度。
parm1		= 200
pdesc1		= 分区个数
weight      = 0.5
max_value   = 3
status      = ON
title1      = 表名
title2      = 分区数量

[rule08]
name		= count_sumpart_full_tab
summary		= 分区表数量过多
description = 分区表过多，常见原因是大表较多。因根据需求，考虑进行垂直拆分，减小单库规模。
parm1		= 10
pdesc1		= 分区表个数
weight      = 1
max_value   = 5
status      = ON
title1      = 表名

[rule09]
name		= count_subpart_tab
summary		= 复合分区数量过多
description = 同上面分区表数量过多的理由类似。
parm1		= 200
pdesc1		= 复合分区个数
weight      = 0.5
max_value   = 3
status      = ON
title1      = 表名:分区名
title2      = 子分区数量

[rule10]
name		= seq_cachesize
summary		= 缓存过小的序列
description = 系统默认会缓存20，如过小将导致频繁查询数据字典，影响并发能力。
parm1		= 1
pdesc1		= 缓存大小
weight      = 1
max_value   = 3
status      = ON
title1      = 序列名称
title2      = 缓存大小

[rule11]
name		= use_procedure_function
summary		= 存在存储过程及函数
description = 存储过程及函数，将影响数据库的异构迁移能力，并存在代码维护性较差等原因。
weight      = 3
max_value   = 3
status      = ON
title1      = 存储过程函数名称

[rule12]
name		= triggers_num
summary		= 存在触发器
description = 触发器，将影响数据库的异构迁移能力。如有数据一致性维护需求，请从应用端给予考虑。
weight      = 5
max_value   = 5
status      = ON
title1      = 触发器名称

[rule13]
name		= dblinks_num
summary		= 存在DBLINK
description = 不建议在一个数据库中访问其他数据库，请考虑在应用端解决。
weight      = 10
max_value   = 10
status      = ON
title1      = dblink名字
title2      = 访问的用户
title3      = 访问的主机

[rule14]
name		= combined_index_percent
summary		= 组合索引数量过多或没有索引
description = 组合索引过多，将导致空间消耗较大、索引维护成本较高。应考虑构建战略性索引结构，不要针对每个需求都通过创建索引解决。
parm1		= 30
pdesc1		= 组合索引百分比
weight      = 0.1
max_value   = 3
status      = ON
title1      = 表名
title2      = 索引名
title3      = 列名
title4      = 列顺序

[rule15]
name		= singletable_index_num
summary		= 索引数量过多
description = 索引可以提高访问速度，但数量过多将导致空间消耗过大，且索引维护成本较高，影响DML效率等问题。应控制索引数量。
parm1		= 3
pdesc1		= 索引个数
weight      = 0.5
max_value   = 5
status      = ON
title1      = 表名
title2      = 索引数

[rule16]
name		= invalid_index
summary		= 存在7天内没有使用的索引
description = 在数据库一段时间内，该索引没有被任何SQL语句使用。请评估此索引的有效性。
weight      = 1
max_value   = 5
status      = ON
title1      = 表名
title2      = 索引名

[rule17]
name		= duplicate_index
summary		= 字段重复索引
description = 一个字段被多个索引引用，请考虑构建策略。删除不必要的索引。
weight      = 0.3
max_value   = 3
status      = ON
title1      = 表名
title2      = 字段名
title3      = 重复次数

[rule18]
name		= global_part_index
summary		= 存在全局分区索引
description = 全局分区索引，存在维护成本较高问题。当分区发生变化是，需要维护全局索引的有效性。
weight      = 0.3
max_value   = 3
status      = ON
title1      = 表名
title2      = 索引名

[rule19]
name		= long_column_tab
summary		= 记录长度定义过长
description = 记录定义长度与实际存储长度差异过大，请考虑字段类型定义是否合理，个别字段过长是否可分表存储。
parm1		= 0.5
pdesc1		= 记录定义长度与实际存储长度占比
weight      = 0.5
max_value   = 5
status      = ON
title1      = 表名
title2      = 行记录定义字节数
title3      = 记录实际平均存放字节数

[rule20]
name		= timestamp
summary		= 不包含时间戳字段的表
description = 时间戳，是获取增量数据的一种方法。建议在表内增加创建时间、更新时间的时间戳字段。命名方式为CREATE_TIME、UPDATE_TIME。
weight      = 1
max_value   = 10
status      = ON
title1      = 表名

[rule21]
name        = col_wrong_type
summary		= 表字段类型不匹配
description = 此规则会抽样部分数据，分析其定义类型与存储类型是否相符。常见问题如用数字、文本保存日期等。
parm1       = 10000                               
pdesc1      = 是否采样阈值(记录数)
parm2       = 20
pdesc2      = 非重复值阈值(排查枚举)
parm3       = 200
pdesc3      = 返回记录数上限
weight      = 0.5
max_value   = 10    
status      = ON	
title1      = 表名称
title2      = 表字段名
title3      = 字段定义类型
title4      = 字段实际类型